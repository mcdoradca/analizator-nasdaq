# -*- coding: utf-8 -*-
"""Finalny Menedżer Portfela

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I-o7cCgtN3Kg7o6CYfoDkbTXrPx1tSvi
"""

# src/portfolio_manager.py

"""
Moduł Menedżera Portfela.

Odpowiedzialność: Zarządzanie stanem portfela użytkownika.
"""

class PortfolioManager:
    def __init__(self):
        """
        Inicjalizuje menedżera z pustym portfelem.
        """
        self._dream_team = [
            {"ticker": "AAPL", "status": "W formie", "aiScore": 82, "currentPrice": 175.20, "changePercent": 1.5},
            {"ticker": "MSFT", "status": "Stabilny", "aiScore": 65, "currentPrice": 340.54, "changePercent": -0.2},
            {"ticker": "TSLA", "status": "Gwiazda Zespołu", "aiScore": 91, "currentPrice": 250.11, "changePercent": 3.1},
        ]

    def get_dream_team(self):
        """
        Zwraca listę spółek z "Dream Teamu".
        """
        print("[PortfolioManager] Zwrócono listę Dream Team.")
        return self._dream_team

    def update_dream_team(self, new_candidates_tickers):
        """
        Aktualizuje Dream Team na podstawie wyników skanowania.
        Na razie prosta implementacja - zastępuje starą listę nową.
        """
        # W przyszłości można tu dodać bardziej zaawansowaną logikę
        new_team = [{"ticker": ticker, "status": "Nowy", "aiScore": 50, "currentPrice": 0, "changePercent": 0} for ticker in new_candidates_tickers]
        self._dream_team = new_team
        print(f"[PortfolioManager] Dream Team zaktualizowany. Nowi kandydaci: {new_candidates_tickers}")
        return self._dream_team

# Tworzymy jedną, globalną instancję menedżera
portfolio_manager = PortfolioManager()